/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h> //https://zmk.dev/docs/codes
#include <dt-bindings/zmk/bt.h> //https://zmk.dev/docs/behaviors/bluetooth
#include <dt-bindings/zmk/ext_power.h> //https://zmk.dev/docs/behaviors/power

&mt {
    tapping-term-ms = <200>; //default: 200
};

/ {
        behaviors {
                //https://zmk.dev/docs/behaviors/hold-tap
                ht_copy: copy_cut {
                        compatible = "zmk,behavior-hold-tap";
                        label = "COPY_CUT";
                        #binding-cells = <2>;
                        tapping_term_ms = <200>;
                        quick_tap_ms = <-1>;
                        flavor = "tap-preferred";
                        bindings = <&kp LC(C)>, <&kp LC(X)>;
                };
                ht_paste: paste_clipboard {
                        compatible = "zmk,behavior-hold-tap";
                        label = "PASTE_CLIPBOARD";
                        #binding-cells = <2>;
                        tapping_term_ms = <200>;
                        quick_tap_ms = <-1>;
                        flavor = "tap-preferred";
                        bindings = <&kp LC(V)>, <&kp LC(LS(V))>;
                };
                ht_close_tab: close_tab_reopen_tab {
                        compatible = "zmk,behavior-hold-tap";
                        label = "CLOSE_TAB_REOPEN_TAB";
                        #binding-cells = <2>;
                        tapping_term_ms = <200>;
                        quick_tap_ms = <-1>;
                        flavor = "tap-preferred";
                        bindings = <&kp LC(W)>, <&kp LC(LS(T))>;
                };

                //https://zmk.dev/docs/behaviors/tap-dance
                td_paste: paste {
                        //single tap = paste, hold = clipboard history, double tap = paste without formatting
                        compatible = "zmk,behavior-tap-dance";
                        label = "PASTE";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&ht_paste>, <&LA(LS(LC(V)))>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                l_default {
// -----------------------------------------------------------------------------------------
// | ESC |  q  |  h  |  o  |  u  |  x  |                                        |  g  |  c  |  r  |  f  |  z  | POW |
// |  -  |  y  |  i  |  e  |  a  |  .  |                                        |  d  |  s  |  t  |  n  |  b  |  ;  |
// | GUI |  j  |  /  |  ,  |  k  |  '  |                                        |  w  |  m  |  l  |  p  |  v  | BTE |
//                   | LTL | LTM | LTR |                                        | RTL | RTM | RTR |
                        bindings = <
&kp ESC         &kp Q   &kp H           &kp O                   &kp U                   &kp X                           &kp G           &kp C           &kp R           &kp F   &kp Z   &ext_power EP_TOG
&kp MINUS       &kp Y   &mt LSHFT I     &mt LCTRL E             &mt LALT A              &kp PERIOD                      &kp D           &kp S           &kp T           &kp N   &kp B   &kp SEMICOLON
&kp LGUI        &kp J   &kp SLASH       &kp COMMA               &kp K                   &kp APOSTROPHE                  &kp W           &kp M           &kp L           &kp P   &kp V   &lt bluetooth_layer
                                        &lt l_function ENTER    &lt l_shift BACKSPACE   &lt l_arrows TAB                &kp DELETE      &KP SPACE       &kp ENTER
                        >;
                };
                l_shift {
// -----------------------------------------------------------------------------------------
// |     |  Q  |  H  |  O  |  U  |  X  |                                        |  G  |  C  |  R  |  F  |  Z  |    |
// |     |  Y  |  I  |  E  |  A  |  @  |                                        |  D  |  S  |  T  |  N  |  B  |    |
// |     |  J  |  ?  |  !  |  K  |  `  |                                        |  W  |  M  |  L  |  P  |  V  |    |
//                   |     |     |     |                                        |     |     |     |
                        bindings = <
&trans  &kp LS(Q)       &kp LS(H)       &kp LS(O)       &kp LS(U)       &kp LS(X)               &kp LS(G)       &kp LS(C)       &kp LS(R)       &kp LS(F)       &kp LS(Z)       &trans
&trans  &kp LS(Y)       &kp LS(I)       &kp LS(E)       &kp LS(A)       &kp AT                  &kp LS(D)       &kp LS(S)       &kp LS(T)       &kp LS(N)       &kp LS(B)       &trans
&trans  &kp LS(J)       &kp QMARK       &kp EXCL        &kp LS(K)       &kp GRAVE               &kp LS(W)       &kp LS(M)       &kp LS(L)       &kp LS(P)       &kp LS(V)       &trans
                                        &trans          &trans          &trans                  &trans          &trans          &trans
                        >;
                };
                l_function {
// -----------------------------------------------------------------------------------------
// |    |               |       |CLOSE TAB              |NEW TAB        |SAVE   |               |F10|F7 |F8 |F9 |   |   |
// |    |LINE COMMENT   |UNDO   |COPY                   |PASTE          |REDO   |               |F11|   |F1 |F2 |F3 |   |
// |    |BLOCK COMMENT  |FIND   |FIND IN SOLUTION       |               |       |               |F12|F4 |F5 |F6 |   |   |
//                              |                       |               |       |               |   |   |   |
                        bindings = <
&trans  &trans          &trans          &ht_close_tab   &kp LC(T)       &kp LC(S)               &kp F10 &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp LC(SLASH)   &kp LC(Z)       &ht_copy        &td_paste       &kp LC(LS(Z))           &kp F11 &trans  &kp F1  &kp F2  &kp F3  &trans
&trans  &kp LA(LS(A))   &kp LC(F)       &LC(LS(F))      &trans          &trans                  &kp F12 &kp F4  &kp F5  &kp F6  &trans  &trans
                                        &trans          &trans          &trans                  &trans  &trans  &trans
                        >;
                };
                l_arrows {
// -----------------------------------------------------------------------------------------
// |    |           |    |    |    |    |                        |    |HOME    |UP     |END       |       |    |
// |    |SCREENSHOT |    |    |    |    |                        |    |LEFT    |DOWN   |RIGHT     |INSERT |    |
// |    |           |    |    |    |    |                        |    |PAGE UP |       |PAGE DOWN |       |    |
//                       |    |    |    |                        |    |        |       |
                        bindings = <
&trans  &trans          &trans  &trans  &trans  &trans          &trans  &kp HOME        &kp UP          &kp END         &trans          &trans
&trans  &kp LG(LS(S))   &trans  &trans  &trans  &trans          &trans  &kp LEFT        &kp DOWN        &kp RIGHT       &kp INSERT      &trans
&trans  &trans          &trans  &trans  &trans  &trans          &trans  &kp PG_UP       &trans          &kp PG_DN       &trans          &trans
                                &trans  &trans  &trans          &trans  &trans          &trans
                        >;
                };
                l_bluetooth {
                        //TODO: https://zmk.dev/docs/behaviors/bluetooth
                };
                l_template {
// -----------------------------------------------------------------------------------------
// |    |    |    |    |    |    |                        |    |    |    |    |    |    |
// |    |    |    |    |    |    |                        |    |    |    |    |    |    |
// |    |    |    |    |    |    |                        |    |    |    |    |    |    |
//                |    |    |    |                        |    |    |    |
                        bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans  &trans  &trans
                        >;
                };
        };
};
